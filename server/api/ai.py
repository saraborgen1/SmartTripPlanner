#server/api/ai.py

# הקובץ הזה מגדיר ממשק
# API
# שמוקדש לתקשורת עם סוכן
# AI
#
# כאן אנחנו משתמשים ב־
# APIRouter
# כדי לרכז את הנתיבים של המודול הזה בנפרד, ולחבר אותם בהמשך לאפליקציה הראשית.
#
# בנוסף אנחנו משתמשים ב־
# Query
# של ספריית
# FastAPI
# כדי להגדיר פרמטרים של שאילתא עם תיאור, ערך ברירת מחדל וכו'.
from fastapi import APIRouter, Query
from ..services.ai_service import get_ai_answer

# יוצרים מופע של
# APIRouter
# כלומר – אובייקט שבו נגדיר את כל הנתיבים (routes) השייכים למודול הזה.
# בסיום, האובייקט הזה יחובר ל־
# FastAPI
# הראשי על ידי הפונקציה
# include_router
router = APIRouter()

# מגדירים נתיב מסוג
# GET
# הנתיב נקרא:
# /ai
# כלומר – כאשר גולשים לכתובת זו בדפדפן, או שולחים בקשת
# GET
# דרך לקוח
# HTTP
# אחר – יופעל הקוד שמוגדר בפונקציה הבאה.
@router.get("/ai")

# מגדירים את הפונקציה שתטפל בכל בקשה לנתיב זה.
# הפונקציה מקבלת פרמטר בשם
# question
# שהוא מחרוזת חובה.
# החובה מסומנת על ידי
# ...
# (Ellipsis)
# בפרמטר של
# Query
# זה אומר – המשתמש חייב לשלוח פרמטר כזה, אחרת הבקשה תידחה.
# בנוסף, ניתן כאן תיאור לפרמטר (description) לטובת תיעוד אוטומטי של
# FastAPI
def ai_endpoint(question: str = Query(..., description="שאלה לסוכן AI")):
    # שולחים את השאלה שקיבלנו אל פונקציית השירות
    # get_ai_answer
    # שמוגדרת בקובץ השירותים.
    # היא זאת שמבצעת את הקריאה למודל
    # AI
    # עצמו.
    # הפונקציה מחזירה תשובה טקסטואלית.
    
    # מחזירים ללקוח תשובה בפורמט של
    # JSON
    # כאשר המפתח נקרא
    # "answer"
    # והערך הוא התשובה שהתקבלה מהמודל.
    return {"answer": get_ai_answer(question)}
